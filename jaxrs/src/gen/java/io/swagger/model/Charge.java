/*
 * Payments API
 * The Payments API allows capturing payments from customers using a variety of payment methods. Charges can be created as one-off events, or payment information can be saved for later use. The API has support for all aspects of a transaction's lifecycle, from initial capture to cancellations and refunds. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: GCPayments@digitalriver.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Charge
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-10-18T15:06:03.607Z")
public class Charge   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("sourceId")
  private String sourceId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("client")
  private String client = null;

  @JsonProperty("channel")
  private String channel = null;

  @JsonProperty("authorized")
  private Boolean authorized = null;

  @JsonProperty("captured")
  private Boolean captured = null;

  @JsonProperty("failureCode")
  private String failureCode = null;

  @JsonProperty("failureMessage")
  private String failureMessage = null;

  @JsonProperty("metadata")
  private String metadata = null;

  @JsonProperty("orderId")
  private String orderId = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("created")
  private String created = null;

   /**
   * Unique identifier for the object.
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier for the object.")
  public String getId() {
    return id;
  }

  public Charge sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * The unique identifier assigned to the desired source for the charge.
   * @return sourceId
  **/
  @ApiModelProperty(required = true, value = "The unique identifier assigned to the desired source for the charge.")
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public Charge description(String description) {
    this.description = description;
    return this;
  }

   /**
   * An arbitrary message related to the charge.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "An arbitrary message related to the charge.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Charge client(String client) {
    this.client = client;
    return this;
  }

   /**
   * The client account this charge is under.
   * @return client
  **/
  @ApiModelProperty(value = "The client account this charge is under.")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public Charge channel(String channel) {
    this.channel = channel;
    return this;
  }

   /**
   * The channel this charge is under.
   * @return channel
  **/
  @ApiModelProperty(value = "The channel this charge is under.")
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }

   /**
   * Boolean representation of whether or not the charge has been authorized successfully.
   * @return authorized
  **/
  @ApiModelProperty(value = "Boolean representation of whether or not the charge has been authorized successfully.")
  public Boolean getAuthorized() {
    return authorized;
  }

   /**
   * Boolean representation of whether or not the charge has been captured.
   * @return captured
  **/
  @ApiModelProperty(value = "Boolean representation of whether or not the charge has been captured.")
  public Boolean getCaptured() {
    return captured;
  }

   /**
   * Error code for charge failure.
   * @return failureCode
  **/
  @ApiModelProperty(value = "Error code for charge failure.")
  public String getFailureCode() {
    return failureCode;
  }

   /**
   * Message explaining charge failure.
   * @return failureMessage
  **/
  @ApiModelProperty(value = "Message explaining charge failure.")
  public String getFailureMessage() {
    return failureMessage;
  }

  public Charge metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Set of key/value pairs to store additional information for charge
   * @return metadata
  **/
  @ApiModelProperty(value = "Set of key/value pairs to store additional information for charge")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public Charge orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * ID of order for this charge
   * @return orderId
  **/
  @ApiModelProperty(value = "ID of order for this charge")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

   /**
   * The current status of the charge. Possible values are: * succeeded * pending * failed 
   * @return status
  **/
  @ApiModelProperty(value = "The current status of the charge. Possible values are: * succeeded * pending * failed ")
  public String getStatus() {
    return status;
  }

   /**
   * Time when charge was created.
   * @return created
  **/
  @ApiModelProperty(value = "Time when charge was created.")
  public String getCreated() {
    return created;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Charge charge = (Charge) o;
    return Objects.equals(this.id, charge.id) &&
        Objects.equals(this.sourceId, charge.sourceId) &&
        Objects.equals(this.description, charge.description) &&
        Objects.equals(this.client, charge.client) &&
        Objects.equals(this.channel, charge.channel) &&
        Objects.equals(this.authorized, charge.authorized) &&
        Objects.equals(this.captured, charge.captured) &&
        Objects.equals(this.failureCode, charge.failureCode) &&
        Objects.equals(this.failureMessage, charge.failureMessage) &&
        Objects.equals(this.metadata, charge.metadata) &&
        Objects.equals(this.orderId, charge.orderId) &&
        Objects.equals(this.status, charge.status) &&
        Objects.equals(this.created, charge.created);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sourceId, description, client, channel, authorized, captured, failureCode, failureMessage, metadata, orderId, status, created);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Charge {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    authorized: ").append(toIndentedString(authorized)).append("\n");
    sb.append("    captured: ").append(toIndentedString(captured)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    failureMessage: ").append(toIndentedString(failureMessage)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

